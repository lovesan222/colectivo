
자바스크립트

variables = 값을 저장하거나 유지하는 역할을 함

const = 바뀌지 않는 값이라는 뜻. 계속 유지 되는 것

const 다음에 variables 를 적는 것 

const a = 5;


const / let 차이


차이점은 const는 constant(상수)라는 것. 이건 값이 바뀔 수 없다는 말임

let은 바꿀 수 있는 값

let을 사용할 때는 

let myName = "nico";

이렇게 let을 한 번 사용한 뒤 값을 바꾸길 원한다면 다시 let을 기재할 필요 없음 

그냥 myName = "nicolas" 라고 적으면 됨

let is for creation. let은 생성할 때만 적는 거임 

만약 애초에 const로 값을 정해놓고 바꾸고 싶다고 

const myName = "nico";

myName = "nicolas" 이렇게 적는 경우에는

Assignment to constant variable 이라고 뜸
-> constant variable에 새로운 값을 대입할 수 없다고 에러가 나는 것
-> const로 variable을 만들었다면, 절대로 값을 업데이트 할 수 없음.

대부분 우리는 const로 만들거고 필요할 때만 let을 사용함.

var는 옛날에 사용하던 거고, 어떤 규칙도 없기 때문에 값이 업데이트 될 수 있음
이건 사용하지 않음. 

alsways const, sometimes let, never var.



true = 켜져 있음 

false = 켜져 있지 않음. 

자바스크립트의 데이터 타입 중에는 '존재하지 않음' 또는 '정의되지 않음'이 있음

그중 하나는 null임. null은 그 변수에 아무것도 없다는 걸 뜻함.

null은 false랑 다름. false는 has a variable. false는 false(거짓)이라는 값이 존재하는 것.

null은 내가 일부러 아무것도 없는 것으로 채운 것임. 비어있다기 보다는, 아무 것도 없다는 의미로 채운 것. 


const amIfat = null;

console.log(amIfat);

--> amIfat이라는 변수를 만들었는데 이건 정의되어 있는 상태임. (defined)
값이 null인 것. 이 말은 값은 있는데 그게 아무것도 아닌 것인 거지.

근데 내가 let something; 이런식으로 만들면?

something이라는 변수를 만들었는데 값을 주고 있지는 않음 ! = "아무것도 없잖아" 

이건 문자랑은 다름. undifined는 데이터 타입처럼 되어 있음.

이말이 뭐냐면, 컴퓨터 메모리 안에는 존재함. 공간은 만들어놓은 상태인데 값이 들어가 있지는 않은 것

null은 우리가 변수 안에 어떤 것이 없다. 아무것도 없다는  것을 확실히 하기 위해 쓰는 것

null = 비어있어요를 의도적으로 표현한 것.

undefined는 어떤 변수가 메모리에는 있는데 값이 주어지지 않은 것. 






object의 규칙은

const player = {
	name : "nico",  콤마 필수
	points : 17171 
}


console.log(player),
console.log(player.name);

object가 리스트는 아님. 리스트는 모든 값이 같은 의미를 가짐
  

constant 안에 무언가를 바꿀 수 있음

player.lastName = "potato" <- 뭔가 추가로 더 넣을 때 

player.points = 15 <- 수정하고 싶을 때 

그리고 console.log(player); 하면 값이 바껴있음




function 

fucntion은 계속해서 반복해서 쓰는 조각 같은 것


function sayHello() {
	
}